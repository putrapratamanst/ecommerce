networks:
  data:
    driver: bridge
    name: edot/data.dev

volumes:
  db_data:
  grafana-storage:

services:
  product-service:
    container_name: product-service
    build: 
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - redis
    env_file:
      - path: ./product-service/.env

  user-service:
    container_name: user-service
    build: 
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - path: ./user-service/.env

  shop-service:
    container_name: shop-service
    build: 
      context: ./shop-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    env_file:
      - path: ./shop-service/.env

  warehouse-service:
    container_name: warehouse-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    build: 
      context: ./warehouse-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    env_file:
      - path: ./warehouse-service/.env
    networks:
      - data

  order-service:
    container_name: order-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    build: 
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    env_file:
      - path: ./order-service/.env
    networks:
      - data

  redis:
    image: redis:alpine
    container_name: ecommerce_redis
    ports:
      - "6379:6379"

  db:
    image: postgres:latest
    container_name: ecommerce_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ecommerce_db}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - data
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus/
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - data

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "9000:9000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - data
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3